{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "availabilitySet": {
      "type": "string",
      "metadata": {
        "description": "Availability set"
      }
    },
    "vmNicName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM's NIC."
      }
    },
    "vmOsDiskName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM's OS disk."
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2m_v2",
        "Standard_A2_v2",
        "Standard_A4m_v2",
        "Standard_A4_v2",
        "Standard_A8m_v2",
        "Standard_A8_v2",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D64_v3",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E32_v3",
        "Standard_E64_v3",
        "Standard_E2s_v3",
        "Standard_E4s_v3",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E32s_v3",
        "Standard_E64s_v3",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_F2s_v2",
        "Standard_F4s_v2",
        "Standard_F8s_v2",
        "Standard_F16s_v2",
        "Standard_F32s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_H8",
        "Standard_H16",
        "Standard_H8m",
        "Standard_H16m",
        "Standard_H16r",
        "Standard_H16mr",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_M64s",
        "Standard_M64ms",
        "Standard_M128s",
        "Standard_M128ms",
        "Standard_NC6",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC6s_v2",
        "Standard_NC12s_v2",
        "Standard_NC24s_v2",
        "Standard_NC24rs_v2",
        "Standard_ND6s",
        "Standard_ND12s",
        "Standard_ND24s",
        "Standard_ND24rs",
        "Standard_NV6",
        "Standard_NV12",
        "Standard_NV24"
      ],
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "availabilitySetDeployment": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Whether the VM will be deployed to an AV set or not."
      }
    },
    "azureHybridBenefitWindows": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Whether the VM will have an existing license assigned or not."
      }
    },
    "operatingSystemDefinition": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "Whether the VM has a Windows or Linux OS."
      }
    }
  },
  "variables": {
    "apiVersion": {
      "compute": "2017-12-01",
      "devTestLab": "2017-04-26-preview"
    },
    "deploymentConfiguration": {
      "availabilitySetDeployment": "[parameters('availabilitySetDeployment')]",
      "azureHybridBenefitWindows": "[parameters('azureHybridBenefitWindows')]",
      "operatingSystemDefinition": "[parameters('operatingSystemDefinition')]",
      "nicName": "[parameters('vmNicName')]",
      "osDiskName": "[parameters('vmOsDiskName')]",
      "vmName": "[parameters('vmName')]",
      "vmSize": "[parameters('vmSize')]"
    },
    "storageConfiguration": {
      "bootDiagnostics": "[concat(uniqueString(resourceGroup().id),'bootdiag')]"
    },
    "availabilitySet": {
      "id": {
        "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySet'))]"
      }
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion').compute]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('deploymentConfiguration').vmName]",
      "location": "[resourceGroup().location]",
      "properties": {
        "availabilitySet": "[if(equals(variables('deploymentConfiguration').availabilitySetDeployment,'yes'), variables('availabilitySet').id, json('null'))]",
        "licenseType": "[if(equals(variables('deploymentConfiguration').azureHybridBenefitWindows,'yes'), 'Windows_Server', json('null'))]",
        "hardwareProfile": {
          "vmSize": "[variables('deploymentConfiguration').vmSize]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[variables('deploymentConfiguration').osDiskName]",
            "osType": "[variables('deploymentConfiguration').operatingSystemDefinition]",
            "caching": "ReadWrite",
            "createOption": "Attach",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks',variables('deploymentConfiguration').osDiskName)]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('deploymentConfiguration').nicName)]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/',variables('storageConfiguration').bootDiagnostics),providers('Microsoft.Storage','storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion').devTestLab]",
          "type": "Microsoft.DevTestLab/schedules",
          "name": "[concat('shutdown-computevm-',variables('deploymentConfiguration').vmName)]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',variables('deploymentConfiguration').vmName)]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
              "time": "2000"
            },
            "timeZoneId": "W. Europe Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',variables('deploymentConfiguration').vmName)]"
          }
        }
      ]
    }
  ]
}
