{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newVMName": {
      "type": "string",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1"
      ],
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "allowedValues": [
        "14.04.2-LTS",
        "15.04"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM."
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "North Europe",
        "West Europe"
      ],
      "metadata": {
        "description": "Deployment location"
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "development",
        "staging",
        "production"
      ],
      "metadata": {
        "description": "Environment tags"
      }
    },
    "availabilitySet": {
      "type": "string",
      "metadata": {
        "description": "Availability set"
      }
    },
    "newVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network name"
      }
    },
    "addressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet name"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Public IP Address"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "newNetworkSecurityGroup": {
      "type": "string",
      "metadata": {
        "description": "Network Security Group"
      }
    },
    "vmExtensionDocker": {
      "type": "string",
      "metadata": {
        "description": "Docker extension name"
      }
    } /*,
    "vmExtensionVMAgent": {
      "type": "string",
      "metadata": {
        "description": "VM Agent extension name"
      }
    },
    "vmExtensionMonitoringAgent": {
      "type": "string",
      "metadata": {
        "description": "Monitoring Agent extension name"
      }
    },
    "monitoringAgentWorkspaceID": {
      "type": "string",
      "metadata": {
        "description": "Monitoring Agent Workspace ID extension name"
      }
    },
    "monitoringAgentWorkspaceKey": {
      "type": "securestring",
      "metadata": {
        "description": "Monitoring Agent Workspace Key extension name"
      }
    }*/ /*,
    "vmExtensionBackup": {
      "type": "string",
      "metadata": {
        "description": "Backup extension name"
      }
    }*/
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "vmStorageAccountContainerName": "vhds",
    "nicName": "[concat(parameters('newVMName'),'-NIC01')]",
    "publicIPAddressName": "[concat(parameters('newVMName'),'-PublicIP01')]",
    "vmName": "[parameters('newVMName')]",
    "OSDiskName": "[concat(parameters('newVMName'),'-OSDisk')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('newVirtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySet')]",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 5
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('newNetworkSecurityGroup')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP_Access",
            "properties": {
              "description": "Allow RDP",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "[parameters('subnetPrefix')]",
              "access": "Allow",
              "priority": "101",
              "direction": "Inbound"
            }
          },
          {
            "name": "SSH_Access",
            "properties": {
              "description": "Allow SSH",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "[parameters('subnetPrefix')]",
              "access": "Allow",
              "priority": "102",
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment": "[parameters('environment')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('newVirtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('newNetworkSecurityGroup'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('newNetworkSecurityGroup'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment": "[parameters('environment')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('newVirtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment": "[parameters('environment')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySet'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', parameters('vmExtensionDocker'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "settings": null,
        "protectedSettings": null
      }
    } /*,
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', parameters('vmExtensionVMAgent'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '/extensions/', parameters('vmExtensionDocker'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "VMAccessForLinux",
        "typeHandlerVersion": "1.2",
        "settings": null,
        "protectedSettings": null
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', parameters('vmExtensionMonitoringAgent'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '/extensions/', parameters('vmExtensionDocker'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '/extensions/', parameters('vmExtensionVMAgent'))]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "MicrosoftMonitoringAgent",
        "typeHandlerVersion": "1.0",
        "settings": {
          "workspaceId": "[parameters('monitoringAgentWorkspaceID')]"
        },
        "protectedSettings": {
          "workspaceKey": "[parameters('monitoringAgentWorkspaceKey')]"
        }
      }
    }*/ /*,
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', parameters('vmExtensionBackup'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '/extensions/', parameters('vmExtensionDocker'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '/extensions/', parameters('vmExtensionVMAgent'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '/extensions/', parameters('vmExtensionMonitoringAgent'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.RecoveryServices",
        "type": "VMSnapshot",
        "typeHandlerVersion": "1.0",
        "settings": null,
        "protectedSettings": null
      }
    }*/
  ]
}