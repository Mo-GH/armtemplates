{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "AKS cluster name"
      }
    },
    "agentPoolProfiles": {
      "type": "array",
      "metadata": {
        "description": "Define one or multiple node pools"
      },
      "defaultValue": [
        {
          "nodeCount": 3,
          "nodeVmSize": "Standard_D2_v3",
          "availabilityZones": [
            "1",
            "2",
            "3"
          ],
          "enableAutoScaling": true,
          "maxCount": 6,
          "minCount": 3
        }
      ]
    },
    "vnetResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network resource group name"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network name"
      }
    },
    "vnetSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network subnet name"
      }
    }
  },
  "variables": {
    "apiVersion": {
      "aks": "2019-08-01"
    },
    "agentPoolProfiles": {
      "vnetSubnetId": "[concat(resourceId(parameters('vnetResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('vnetName')),'/subnets/',parameters('vnetSubnetName'))]"
    },
    "outputs": {
      "resourceId": "[resourceId('Microsoft.ContainerService/managedClusters/',parameters('name'))]"
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion').aks]",
      "type": "Microsoft.ContainerService/managedClusters/agentPools",
      "name": "[concat(parameters('name'),'/nodepool',add(copyIndex('agentPoolProfiles'),1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "agentPoolProfiles",
        "count": "[length(parameters('agentPoolProfiles'))]"
      },
      "properties": {
        "maxPods": 250,
        "osDiskSizeGB": 128,
        "count": "[parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].nodeCount]",
        "vmSize": "[parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].nodeVmSize]",
        "osType": "Linux",
        "vnetSubnetID": "[variables('agentPoolProfiles').vnetSubnetId]",
        "enableAutoScaling": "[if(parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].enableAutoScaling, parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].enableAutoScaling, json('null'))]",
        "maxCount": "[if(parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].enableAutoScaling, parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].maxCount, json('null'))]",
        "minCount": "[if(parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].enableAutoScaling, parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].minCount, json('null'))]",
        "type": "VirtualMachineScaleSets",
        "availabilityZones": "[parameters('agentPoolProfiles')[copyIndex('agentPoolProfiles')].availabilityZones]"
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "value": "[variables('outputs').resourceId]"
    }
  }
}