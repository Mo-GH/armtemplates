{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AKS cluster."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of nodes for the AKS cluster."
      },
      "minValue": 1,
      "maxValue": 100
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2m_v2",
        "Standard_A2_v2",
        "Standard_A4m_v2",
        "Standard_A4_v2",
        "Standard_A8m_v2",
        "Standard_A8_v2",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D64_v3",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E32_v3",
        "Standard_E64_v3",
        "Standard_E2s_v3",
        "Standard_E4s_v3",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E32s_v3",
        "Standard_E64s_v3",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_H8",
        "Standard_H16",
        "Standard_H8m",
        "Standard_H16m",
        "Standard_H16r",
        "Standard_H16mr",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_M64s",
        "Standard_M64ms",
        "Standard_M128s",
        "Standard_M128ms",
        "Standard_NC6",
        "Standard_NC12",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NV6",
        "Standard_NV12",
        "Standard_NV24"
      ],
      "metadata": {
        "description": "The VM size of the nodes."
      }
    },
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux nodes."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Servive Principal Client Id."
      },
      "type": "securestring",
      "defaultValue": ""
    },
    "resourceGroupKeyVault": {
      "type": "string",
      "metadata": {
        "description": "Resource group of the Key Vault"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Key Vault name"
      }
    },
    "keyVaultSecretName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault secret containing the Service Principal Client Secret"
      }
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux"
      ],
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.7.7",
      "allowedValues": [
        "1.7.7",
        "1.7.9",
        "1.7.12",
        "1.8.1",
        "1.8.2",
        "1.8.6",
        "1.8.7",
        "1.9.1",
        "1.9.2"
      ],
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "aksRegion": {
      "type": "string",
      "defaultValue": "westeurope",
      "allowedValues": [
        "westeurope",
        "eastus",
        "centralus",
        "canadacentral",
        "canadaeast"
      ],
      "metadata": {
        "description": "Azure region for AKS deployment."
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of AKS clusters to create"
      },
      "minValue": 1,
      "maxValue": 20
    },
    "aksClusterNumeration": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Start numeration of AKS clusters. E.g. Set value to 1 for AKS1 and set value to 2 for AKS2 if AKS1 exists!"
      }
    }
  },
  "variables": {
    "apiVersion": {
      "aks": "2017-08-31"
    },
    "linuxProfile": {
      "adminUsername": "[parameters('linuxAdminUsername')]",
      "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]"
    },
    "servicePrincipalProfile": {
      "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
      "keyVaultId": "[concat('/subscriptions/',subscription().id,'/resourceGroups/',parameters('resourceGroupKeyVault'),'/providers/Microsoft.KeyVault/vaults/',parameters('keyVaultName'))]",
      "secretName": "[parameters('keyVaultSecretName')]"
    },
    "agentPoolProfiles": {
      "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
      "agentCount": "[parameters('agentCount')]",
      "agentVmSize": "[parameters('agentVMSize')]",
      "osType": "[parameters('osType')]"
    },
    "aksCluster": {
      "clusterName": "[parameters('clusterName')]",
      "dnsPrefix": "[parameters('clustername')]",
      "location": "[parameters('aksregion')]",
      "kubernetesVersion": "[parameters('kubernetesVersion')]"
    },
    "deploymentConfiguration": {
      "numberOfInstances": "[parameters('numberOfInstances')]",
      "aksClusterNumeration": "[parameters('aksClusterNumeration')]"
    },
    "outputArray": {
      "copy": [
        {
          "name": "aksClusterProperties",
          "count": "[parameters('numberofInstances')]",
          "input": {
            "name": "[concat(parameters('clusterName'),copyIndex('aksClusterProperties',parameters('aksClusterNumeration')))]",
            "value": "[resourceId('Microsoft.ContainerService/managedClusters/',concat(parameters('clusterName'),copyIndex('aksClusterProperties',parameters('aksClusterNumeration'))))]"
          }
        }
      ]
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion').aks]",
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[concat(variables('aksCluster').clusterName,copyIndex(variables('deploymentConfiguration').aksClusterNumeration))]",
      "location": "[variables('aksCluster').location]",
      "copy": {
        "name": "aksLoop",
        "count": "[variables('deploymentConfiguration').numberOfInstances]"
      },
      "properties": {
        "kubernetesVersion": "[variables('aksCluster').kubernetesVersion]",
        "dnsPrefix": "[concat(variables('aksCluster').dnsPrefix,copyIndex(variables('deploymentConfiguration').aksClusterNumeration))]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[variables('agentPoolProfiles').osDiskSizeGB]",
            "count": "[variables('agentPoolProfiles').agentCount]",
            "vmSize": "[variables('agentPoolProfiles').agentVmSize]",
            "osType": "[variables('agentPoolProfiles').osType]",
            "storageProfile": "ManagedDisks"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[variables('linuxProfile').adminUsername]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[variables('linuxProfile').sshRSAPublicKey]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "clientId": "[variables('servicePrincipalProfile').servicePrincipalClientId]",
          "keyVaultSecretRef": {
            "vaultID": "[variables('servicePrincipalProfile').keyVaultId]",
            "secretName": "[variables('servicePrincipalProfile').secretName]"
          }
        }
      }
    }
  ],
  "outputs": {
    "aksClusterProperties": {
      "type": "object",
      "value": "[variables('outputArray')]"
    }
  }
}
